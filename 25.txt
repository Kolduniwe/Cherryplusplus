#include <iostream>
using namespace std;

class Tree {
public:
    virtual void draw() {
        cout << "Base Tree\n";
    }
    virtual ~Tree() {} // Віртуальний деструктор для коректного видалення
};

class TreeA : public Tree {
public:
    void draw() override {
        cout << "Drawing 1:\n";
        cout << "  /\\\n";
        cout << " //\\\\\n";
    }
};

class TreeB : public Tree {
public:
    void draw() override {
        cout << "Drawing 2:\n";
        cout << "  /\\\n";
        cout << " /**\\\n";
    }
};

class TreeC : public Tree {
public:
    void draw() override {
        cout << "Drawing 3:\n";
        cout << "  /\\\n";
        cout << " /++\\\n";
    }
};

int main() {
    Tree* forest[3]; // масив вказівників на базовий клас

    // створення об'єктів
    TreeA a;
    TreeB b;
    TreeC c;

    // прив’язка вказівників до об'єктів
    forest[0] = &a;
    forest[1] = &b;
    forest[2] = &c;

    // виклик віртуальної функції через вказівники
    for (int i = 0; i < 3; i++) {
        forest[i]->draw();
    }

    return 0;
}
